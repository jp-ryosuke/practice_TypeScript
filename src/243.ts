//文字列の結合を+演算子で行う
/* + 演算子はこれまで説明したように数値の加算を表す算術演算子です
しかし + 演算子はもう一つの側面を持っています
それは文字列の結合です
ユーザが名前を入力したら挨拶をするという、いかにもプログラム入門書らしいサンプルを作ってみました*/

import { createInterface } from "readline";

const rl = createInterface({
    input: process.stdin,
    output: process.stdout
});

rl.question('名前を入力してください:', (name) =>{
    console.log("こんにちは、" + name + "さん");
    rl.close();
});

/*このプログラムを実行してuhyoと入力すれば こんにちは、uhyoさん と出力されます
この文字列は "こんにちは," + name + "さん" という式によって作られたものです
見ての通り、この式には + 演算子が2回使われておりオペランドはいずれも文字列です
この用途があるため + のオペランドとして文字列が渡されてもコンパイルエラーにはなりません
それどころか、片方が文字列であれば、もう片方はどんな値でも渡すことができます
このとき文字列以外の値は文字列に変換されてから結合されます
文字列結合の結果は当然ながら文字列ですから、片方のオペランドが String 型ならば + の式の返り値も String 型となります*/

//文字列の連結時に文字列に変換される例
console.log("foo" + true); //"footrue"
console.log(null + "bar"); //"nullbar"

/* + 演算子にはこのような使い道がありますが、近年はこのような利用は減少傾向にあります
それはテンプレートリテラルが ES2015 で登場したからです
テンプレートリテラルを用いることで上記の式は 'こんにちは、 ${name}さん' と置き換えることができ
こちらの方が文字列の全体像が見えやすく直感的です
これにより、文字列の結合にわざわざ + を利用する機会が減少しているのです*/